% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colsa.R
\name{colsa}
\alias{colsa}
\title{Collaborative Inference for Cox Proportional Hazards Model in Distributed
Data}
\usage{
colsa(formula, data, n_basis, boundary, scale = 2, ...)
}
\arguments{
\item{formula}{A formula object specifying the model. The response must be
a survival object created using the \code{Surv} function from the \code{survival}
package.}

\item{data}{A data frame containing the variables in the model.}

\item{n_basis}{An integer specifying the number of basis functions to use.}

\item{boundary}{A numeric vector specifying the boundary for the basis
functions. It should be a two-element vector with the lower and upper
bounds.}

\item{scale}{A numeric value specifying the scaling factor for the number of
pre-estimation basis functions. Default is 2.0.}

\item{...}{Additional arguments passed to the optimization function.}
}
\value{
An object of class \code{"colsa"} containing the following components:
\item{logLik}{The log-likelihood of the fitted model.}
\item{theta}{The estimated model parameters.}
\item{hessian}{The Hessian of the objective function at the solution.}
\item{n_basis}{The number of basis functions used.}
\item{n_features}{The number of features in the model.}
\item{n_samples}{The number of samples in the dataset.}
\item{formula}{The formula used to fit the model.}
\item{boundary}{The boundary for the basis functions.}
\item{scale}{The scaling factor for the number of pre-estimation basis
functions.}
\item{call}{The matched call.}
}
\description{
Performs collaborative inference for the Cox proportional
hazards model, tailored for distributed data environments.
}
\details{
This function employs the \code{trust} optimization method to estimate
the model parameters. If the optimization fails to converge, an error is
raised. During the pre-estimation stage, parameters are projected to
mitigate bias introduced in the early stage.
}
\examples{
formula <- Surv(time, status) ~ x1 + x2 + x31 + x42 + x43 + x44
boundary <- c(0, max(sim$time))
df_sub <- sim[sim$group == 1, , drop = FALSE]
fit <- colsa(formula, df_sub, n_basis = 3, boundary = boundary)
for (batch in 2:6) {
  df_sub <- sim[sim$group == batch, , drop = FALSE]
  fit <- update(fit, df_sub, n_basis = "auto")
}
summary(fit)

}
\seealso{
\code{\link{update.colsa}}, \code{\link{summary.colsa}}.
}
